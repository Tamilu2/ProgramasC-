#include <iostream>
#include <stdlib.h>
#include <iomanip>
using namespace std;

void carga_matriz(int mat[][4], int N){
	for (int i=0;i<N;i++)
	{
		for(int j=0;j<N;j++)
		{
			mat[i][j]=-9 + rand()%(10+1-(-9));
		}
		cout << endl;
	}
}

void mostrar_matriz(int mat[][4], int N){
	for (int i=0;i<N;i++)
	{
		for(int j=0;j<N;j++)
		{
			cout << setw(4) << mat[i][j] ;
		}
		cout << endl;
	}
	cout << endl;
}
int Determinante(int mat[][4], int N){
	float det=0;
	
	cout << endl;
	switch(N){
		case 1: det = mat[0][0];
			break;
		case 2: det = mat[0][0]*mat[1][1]-mat[0][1]*mat[1][0];
			break;
		case 3: det = (mat[0][0]*((mat[1][1]*mat[2][2])-(mat[1][2]*mat[2][1]))-mat[0][1]*((mat[1][0]*mat[2][2])-(mat[1][2]*mat[2][0]))+mat[0][2]*((mat[1][0]*mat[2][1])-(mat[1][1]*mat[2][0])));
			break;
		case 4:det = (mat[0][0]*(mat[1][1]*(mat[2][2]*mat[3][3]-mat[2][3]*mat[3][2])-mat[1][2]*(mat[2][1]*mat[3][3]-mat[2][3]*mat[3][1])+mat[1][3]*(mat[2][1]*mat[3][2]-mat[2][2]*mat[3][1]))-mat[0][1]*(mat[1][0]*(mat[2][2]*mat[3][3]-mat[2][3]*mat[3][2])-mat[1][2]*(mat[2][0]*mat[3][3]-mat[2][3]*mat[3][0])+mat[1][3]*(mat[2][0]*mat[3][2]-mat[2][2]*mat[3][0]))+mat[0][2]*(mat[1][0]*(mat[2][1]*mat[3][3]-mat[2][3]*mat[3][1])-mat[1][1]*(mat[2][0]*mat[3][3]-mat[2][3]*mat[3][0])+mat[1][3]*(mat[2][0]*mat[3][1]-mat[2][1]*mat[3][0]))-mat[0][3]*(mat[1][0]*(mat[2][1]*mat[3][2]-mat[2][2]*mat[3][1])-mat[1][1]*(mat[2][0]*mat[3][2]-mat[2][2]*mat[3][0])+mat[1][2]*(mat[2][0]*mat[3][1]-mat[2][1]*mat[3][0])));
		break;
	}
	return det;
}

int main()
{
	int N;
	int determinante;
	srand(time(NULL));
	int mat[4][4];
	cout <<endl;
	cout <<endl << "Calculo de determinantes hasta orden 4" << endl;
	cout <<endl << "Ingrese orden de la matriz (1, 2, 3 o 4): ";
	cin >> N;
	carga_matriz(mat, N); //carga matriz con enteros aleatorios entre -9 y 9
	mostrar_matriz(mat, N); // muestra la matr√≠z generada
	
	determinante = Determinante(mat,N); // Calcula el determinante de dicha matriz
	cout << "|mat| = " << determinante << endl;
	
	
	return 0;
}
